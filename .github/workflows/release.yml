name: Release Management

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major
      pre_release:
        description: 'Create pre-release'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        registry-url: 'https://npm.pkg.github.com'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests before release
      run: |
        npm test
        npm run validate
      continue-on-error: true
      
    - name: Generate changelog
      id: changelog
      run: |
        echo "## Changes in this Release" > RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> RELEASE_NOTES.md
        echo "" >> RELEASE_NOTES.md
        echo "## Full Changelog" >> RELEASE_NOTES.md
        echo "**Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^)...$(git describe --tags --abbrev=0)" >> RELEASE_NOTES.md
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        body_path: RELEASE_NOTES.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
        generate_release_notes: true
        files: |
          package.json
          README.md
          CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Publish to GitHub Packages
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      continue-on-error: true

  bump-version:
    name: Bump Version
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Install dependencies
      run: npm ci
      
    - name: Bump version
      id: version
      run: |
        OLD_VERSION=$(node -p "require('./package.json').version")
        npm version ${{ github.event.inputs.version_type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        
    - name: Update changelog
      run: |
        if [ ! -f CHANGELOG.md ]; then
          echo "# Changelog" > CHANGELOG.md
          echo "" >> CHANGELOG.md
        fi
        
        # Create new changelog entry
        sed -i "2i\\## [v${{ steps.version.outputs.new_version }}] - $(date +%Y-%m-%d)\\n\\n### Added\\n- Version bump from v${{ steps.version.outputs.old_version }} to v${{ steps.version.outputs.new_version }}\\n" CHANGELOG.md
        
    - name: Commit version bump
      run: |
        git add package.json CHANGELOG.md
        git commit -m "chore(release): bump version to v${{ steps.version.outputs.new_version }}"
        git tag -a "v${{ steps.version.outputs.new_version }}" -m "Release v${{ steps.version.outputs.new_version }}"
        
    - name: Push changes
      run: |
        git push origin master
        git push origin v${{ steps.version.outputs.new_version }}
        
    - name: Create pre-release
      if: github.event.inputs.pre_release == 'true'
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.version.outputs.new_version }}
        name: Release v${{ steps.version.outputs.new_version }}
        body: |
          ## Pre-release v${{ steps.version.outputs.new_version }}
          
          This is a pre-release version. Please test thoroughly before using in production.
          
          ### Changes
          - Version bump from v${{ steps.version.outputs.old_version }}
          
        draft: false
        prerelease: true
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
